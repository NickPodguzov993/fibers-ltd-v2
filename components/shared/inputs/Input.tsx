import clsx from "clsx";
import { InputHTMLAttributes, forwardRef, useState } from "react";

type InputProps = InputHTMLAttributes<HTMLInputElement> & {
  error?: string;
};

export const Input = forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, error, ...props }, ref) => {
    const [isShown, setShown] = useState(false);

    function onShow() {
      setShown((v) => !v);
    }

    return (
      <div className="relative flex flex-col gap-1 p-px">
        <input
          ref={ref}
          type={type === "password" && isShown ? "text" : type}
          className={clsx(
            "w-full px-4 py-3 h-[50px] bg-gray rounded-xs leading-paragraph text-dark placeholder:text-dark/50 outline-2 outline-dark",
            type === "password" &&
              !isShown &&
              "placeholder-shown:text-base text-[32px]",
            error && "border-2 border-error",
            className
          )}
          {...props}
        />
        {type === "password" && (
          <button
            className="absolute inset-y-0.5 right-0.5 w-14 rounded-xs transition-colors hover:bg-accent/10 active:bg-accent/10"
            onClick={onShow}
          >
            <svg
              className={clsx(
                "absolute top-[13px] right-4 transition-opacity",
                isShown ? "opacity-100" : "opacity-0"
              )}
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
            >
              <path
                d="M12.0004 16C13.2504 16 14.3129 15.5625 15.1879 14.6875C16.0629 13.8125 16.5004 12.75 16.5004 11.5C16.5004 10.25 16.0629 9.1875 15.1879 8.3125C14.3129 7.4375 13.2504 7 12.0004 7C10.7504 7 9.68789 7.4375 8.81289 8.3125C7.93789 9.1875 7.50039 10.25 7.50039 11.5C7.50039 12.75 7.93789 13.8125 8.81289 14.6875C9.68789 15.5625 10.7504 16 12.0004 16ZM12.0004 14.2C11.2504 14.2 10.6129 13.9375 10.0879 13.4125C9.56289 12.8875 9.30039 12.25 9.30039 11.5C9.30039 10.75 9.56289 10.1125 10.0879 9.5875C10.6129 9.0625 11.2504 8.8 12.0004 8.8C12.7504 8.8 13.3879 9.0625 13.9129 9.5875C14.4379 10.1125 14.7004 10.75 14.7004 11.5C14.7004 12.25 14.4379 12.8875 13.9129 13.4125C13.3879 13.9375 12.7504 14.2 12.0004 14.2ZM12.0004 19C9.76706 19 7.72956 18.4 5.88789 17.2C4.04622 16 2.59206 14.4167 1.52539 12.45C1.44206 12.3 1.37956 12.1458 1.33789 11.9875C1.29622 11.8292 1.27539 11.6667 1.27539 11.5C1.27539 11.3333 1.29622 11.1708 1.33789 11.0125C1.37956 10.8542 1.44206 10.7 1.52539 10.55C2.59206 8.58333 4.04622 7 5.88789 5.8C7.72956 4.6 9.76706 4 12.0004 4C14.2337 4 16.2712 4.6 18.1129 5.8C19.9546 7 21.4087 8.58333 22.4754 10.55C22.5587 10.7 22.6212 10.8542 22.6629 11.0125C22.7046 11.1708 22.7254 11.3333 22.7254 11.5C22.7254 11.6667 22.7046 11.8292 22.6629 11.9875C22.6212 12.1458 22.5587 12.3 22.4754 12.45C21.4087 14.4167 19.9546 16 18.1129 17.2C16.2712 18.4 14.2337 19 12.0004 19ZM12.0004 17C13.8837 17 15.6129 16.5042 17.1879 15.5125C18.7629 14.5208 19.9671 13.1833 20.8004 11.5C19.9671 9.81667 18.7629 8.47917 17.1879 7.4875C15.6129 6.49583 13.8837 6 12.0004 6C10.1171 6 8.38789 6.49583 6.81289 7.4875C5.23789 8.47917 4.03372 9.81667 3.20039 11.5C4.03372 13.1833 5.23789 14.5208 6.81289 15.5125C8.38789 16.5042 10.1171 17 12.0004 17Z"
                fill="#212121"
              />
            </svg>
            <svg
              className={clsx(
                "absolute top-[13px] right-4 transition-opacity",
                isShown ? "opacity-0" : "opacity-100"
              )}
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
            >
              <path
                d="M16.1 13.2996L14.65 11.8496C14.8333 10.9663 14.6042 10.2121 13.9625 9.58711C13.3208 8.96211 12.55 8.71628 11.65 8.84961L10.2 7.39961C10.4833 7.26628 10.775 7.16628 11.075 7.09961C11.375 7.03294 11.6833 6.99961 12 6.99961C13.25 6.99961 14.3125 7.43711 15.1875 8.31211C16.0625 9.18711 16.5 10.2496 16.5 11.4996C16.5 11.8163 16.4667 12.1246 16.4 12.4246C16.3333 12.7246 16.2333 13.0163 16.1 13.2996ZM19.3 16.4496L17.85 15.0496C18.4833 14.5663 19.05 14.0288 19.55 13.4371C20.05 12.8454 20.4667 12.1996 20.8 11.4996C19.9667 9.81628 18.7625 8.47878 17.1875 7.48711C15.6125 6.49544 13.8833 5.99961 12 5.99961C11.5167 5.99961 11.0458 6.03294 10.5875 6.09961C10.1292 6.16628 9.66667 6.26628 9.2 6.39961L7.65 4.84961C8.35 4.56628 9.0625 4.35378 9.7875 4.21211C10.5125 4.07044 11.25 3.99961 12 3.99961C14.2833 3.99961 16.3708 4.59961 18.2625 5.79961C20.1542 6.99961 21.6 8.61628 22.6 10.6496C22.6667 10.7829 22.7167 10.9204 22.75 11.0621C22.7833 11.2038 22.8 11.3496 22.8 11.4996C22.8 11.6496 22.7875 11.7954 22.7625 11.9371C22.7375 12.0788 22.6917 12.2163 22.625 12.3496C22.2583 13.1663 21.7917 13.9204 21.225 14.6121C20.6583 15.3038 20.0167 15.9163 19.3 16.4496ZM12 18.9996C9.76667 18.9996 7.725 18.3954 5.875 17.1871C4.025 15.9788 2.56667 14.3913 1.5 12.4246C1.41667 12.2913 1.35417 12.1454 1.3125 11.9871C1.27083 11.8288 1.25 11.6663 1.25 11.4996C1.25 11.3329 1.26667 11.1746 1.3 11.0246C1.33333 10.8746 1.39167 10.7246 1.475 10.5746C1.80833 9.90794 2.19583 9.27044 2.6375 8.66211C3.07917 8.05378 3.58333 7.49961 4.15 6.99961L2.075 4.89961C1.89167 4.69961 1.80417 4.46211 1.8125 4.18711C1.82083 3.91211 1.91667 3.68294 2.1 3.49961C2.28333 3.31628 2.51667 3.22461 2.8 3.22461C3.08333 3.22461 3.31667 3.31628 3.5 3.49961L20.5 20.4996C20.6833 20.6829 20.7792 20.9121 20.7875 21.1871C20.7958 21.4621 20.7 21.6996 20.5 21.8996C20.3167 22.0829 20.0833 22.1746 19.8 22.1746C19.5167 22.1746 19.2833 22.0829 19.1 21.8996L15.6 18.4496C15.0167 18.6329 14.425 18.7704 13.825 18.8621C13.225 18.9538 12.6167 18.9996 12 18.9996ZM5.55 8.39961C5.06667 8.83294 4.625 9.30794 4.225 9.82461C3.825 10.3413 3.48333 10.8996 3.2 11.4996C4.03333 13.1829 5.2375 14.5204 6.8125 15.5121C8.3875 16.5038 10.1167 16.9996 12 16.9996C12.3333 16.9996 12.6583 16.9788 12.975 16.9371C13.2917 16.8954 13.6167 16.8496 13.95 16.7996L13.05 15.8496C12.8667 15.8996 12.6917 15.9371 12.525 15.9621C12.3583 15.9871 12.1833 15.9996 12 15.9996C10.75 15.9996 9.6875 15.5621 8.8125 14.6871C7.9375 13.8121 7.5 12.7496 7.5 11.4996C7.5 11.3163 7.5125 11.1413 7.5375 10.9746C7.5625 10.8079 7.6 10.6329 7.65 10.4496L5.55 8.39961Z"
                fill="#212121"
              />
            </svg>
          </button>
        )}
        {error && (
          <span className="text-xs font-bold leading-none text-error">
            {error}
          </span>
        )}
      </div>
    );
  }
);

Input.displayName = "Input";
